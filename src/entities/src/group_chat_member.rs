//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "group_chat_member")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub member_id: i32,
    pub profile_id: i32,
    pub group_chat_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::group_chat::Entity",
        from = "Column::GroupChatId",
        to = "super::group_chat::Column::GroupChatId",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    GroupChat,
    #[sea_orm(
        belongs_to = "super::profile::Entity",
        from = "Column::ProfileId",
        to = "super::profile::Column::ProfileId",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    Profile,
}

impl Related<super::group_chat::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::GroupChat.def()
    }
}

impl Related<super::profile::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Profile.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
