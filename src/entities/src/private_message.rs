//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "private_message")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub private_message_id: i32,
    pub sender_id: i32,
    pub recipient_id: i32,
    pub content: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::profile::Entity",
        from = "Column::RecipientId",
        to = "super::profile::Column::ProfileId",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    Profile2,
    #[sea_orm(
        belongs_to = "super::profile::Entity",
        from = "Column::SenderId",
        to = "super::profile::Column::ProfileId",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    Profile1,
}

impl ActiveModelBehavior for ActiveModel {}
